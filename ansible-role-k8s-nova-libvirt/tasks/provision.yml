- name: Upload config files
  template:
    src: "{{item}}"
    dest: /tmp/{{item}}
    backup: yes
    mode: 0644
  with_items:
    - qemu.conf

- include: hiera.yml

- name: Generate config files
  config_template:
    src: libvirtd.conf.j2
    dest: /tmp/libvirtd.conf
    config_overrides: '{{libvirtd_config}}'
    config_type: ini

- name: Read configs into memory
  slurp:
    src: "/tmp/libvirtd.conf"
  register: "libvirtd_conf"

- name: Read configs into memory
  slurp:
    src: "/tmp/qemu.conf"
  register: "qemu_conf"

- name: Create nova-libvirt configmaps
  ignore_errors: yes
  k8s_v1_config_map:
    name: "{{name}}"
    host: "{{coe_host}}"
    context: "{{kube_context}}"
    kubeconfig: "{{config_file}}"
    namespace: "{{namespace}}"
    state: present
    debug: yes
    labels:
      service: "{{name}}"
    data:
      config.json: |
        {
            "command": "/usr/sbin/libvirtd --listen",
            "config_files": [
                {
                    "source": "/var/lib/kolla/config_files/libvirtd.conf",
                    "dest": "/etc/libvirt/libvirtd.conf",
                    "owner": "root",
                    "perm": "0644"
                },
                {
                    "source": "/var/lib/kolla/config_files/qemu.conf",
                    "dest": "/etc/libvirt/qemu.conf",
                    "owner": "root",
                    "perm": "0644"
                }    ]
        }

      qemu.conf: |
        {{qemu_conf['content'] | b64decode}}

      libvirtd.conf: |
        {{libvirtd_conf['content'] | b64decode}}

# Create PVC for persistent storage
- name: Create persitent volume claim
  k8s_v1_persistent_volume_claim:
    name: nova-libvirt-persistent-storage
    namespace: "{{namespace}}"
    state: present
    access_modes:
    - ReadWriteOnce
    resources_requests:
      storage: 1Gi

- name: Create libvirt daemonset 
  openshift_v1_deployment_config:
  #k8s_v1beta1_daemon_set:
    name: "{{name}}"
    host: "{{coe_host}}"
    context: "{{kube_context}}"
    kubeconfig: "{{config_file}}"
    namespace: "{{namespace}}"
    service_account_name: '{{ service_account_name }}'
    node_selector:
      compute: "true"
    spec_template_metadata_labels:
      app: "{{name}}"

    replicas: 1
    host_network: true
    host_pid: true
    host_ipc: true
    containers:
      - name: "{{name}}"
        # Privileged SCC
        securityContext:
          privileged: true
        image: tripleoupstream/centos-binary-nova-libvirt
        imagePullPolicy: IfNotPresent
        env:
          - name: KOLLA_CONFIG_STRATEGY
            value: COPY_ALWAYS
          - name: KOLLA_KUBERNETES
            value: ""
        volume_mounts:
          - name: host-etc-localtime
            mountPath: /etc/localtime
            readOnly: true
          - name: nova-libvirt-persistent-storage
            mountPath: /var/lib/libvirt
          - name: lib-modules
            mountPath: /lib/modules
          - name: var-run
            mountPath: /var/run
          - name: dev
            mountPath: /dev
          - name: sys-fs-cgroup
            mountPath: /sys/fs/cgroup
          - name: kolla-config
            mountPath: /var/lib/kolla/config_files/
    volumes:
      - name: kolla-config
        config_map:
          name: "{{name}}"
      - name: host-etc-localtime
        hostPath:
          path: /etc/localtime
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: var-run
        hostPath:
          path: /var/run
      - name: dev
        hostPath:
            path: /dev
      - name: sys-fs-cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: nova-libvirt-persistent-storage
        persistentVolumeClaim:
          claimName: nova-libvirt-persistent-storage
    state: present
